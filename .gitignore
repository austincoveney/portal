# DigiGrow Client Portal - Git Ignore Rules

# =============================================================================
# ENVIRONMENT & CONFIGURATION FILES
# =============================================================================

# Environment variables (contains sensitive data)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Configuration files with secrets
config/secrets.json
config/production.json

# =============================================================================
# NODE.JS & NPM
# =============================================================================

# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Package manager lock files (choose one)
# yarn.lock
# package-lock.json
# pnpm-lock.yaml

# =============================================================================
# NEXT.JS
# =============================================================================

# Next.js build output
.next/
out/

# Next.js cache
.next/cache/

# =============================================================================
# SECURITY-SENSITIVE FILES
# =============================================================================

# Database monitoring scripts (contain service role keys)
database/monitoring/
*.ps1

# Any files containing service role keys or admin credentials
*service-role*
*admin-key*

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# =============================================================================
# BUILD & DEPLOYMENT
# =============================================================================

# Build directories
build/
dist/

# Static file generation
static/
public/generated/

# =============================================================================
# LOGS & DEBUGGING
# =============================================================================

# Log files
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# =============================================================================
# TESTING
# =============================================================================

# Test coverage
coverage/
.nyc_output/

# Jest
.jest/

# =============================================================================
# TEMPORARY FILES
# =============================================================================

# Temporary folders
tmp/
temp/

# Cache directories
.cache/
.parcel-cache/

# =============================================================================
# DATABASE & BACKUPS
# =============================================================================

# Database files (if using local SQLite)
*.db
*.sqlite
*.sqlite3

# Database backups
*.sql.backup
*.dump

# =============================================================================
# SECURITY & SENSITIVE DATA
# =============================================================================

# API keys and secrets
secrets/
keys/
*.pem
*.key
*.crt

# Backup files
*.backup
*.bak

# =============================================================================
# DOCUMENTATION BUILD
# =============================================================================

# Generated documentation
docs/build/
docs/.docusaurus/

# =============================================================================
# MISC
# =============================================================================

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.parcel-cache

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# =============================================================================
# PROJECT SPECIFIC
# =============================================================================

# Generated API documentation
api-docs/

# Uploaded files (if any)
uploads/

# Generated reports
reports/

# Local development database
local.db